dictionary.nullKey = dictionary keys must not be null
dictionary.nullValue = dictionary values must not be null
dictionary.nullDict = dictionary must not be null
jsonRef.nullURI = provided URI cannot be null
jsonRef.invalidURI = input "%s" is not a valid URI
jsonRef.notAbsolute = input "%s" is not an absolute JSON Reference
jsonRef.nullInput = string input cannot be null
loadingCfg.nullScheme = scheme cannot be null
loadingCfg.emptyScheme = cannot register empty scheme
loadingCfg.illegalScheme = illegal URI scheme "%s"
loadingCfg.nullDereferencingMode = dereferencing mode cannot be null
loadingCfg.redirectToSelf = cannot to redirect to self! (URI: "%s")
loadingCfg.nullSchema = cannot register null schema
loadingCfg.duplicateURI = a schema has already been registered for URI "%s"
loadingCfg.noIDInSchema = schema has no id
loadingCfg.nullJsonParserFeature = jsonParserFeature cannot be null
processing.noProcessor = no suitable processor found
processing.nullPredicate = predicate cannot be null
processing.nullProcessor = processor cannot be null
processing.nullKey = map keys must not be null
processing.nullFunction = input-to-key function must not be null
processing.nullEquivalence = equivalence must not be null
processing.chainStopped = processing chain stopped
processing.nullLevel = log level must not be null
processing.nullExceptionProvider = exception provider must not be null
processing.nullReport = report cannot be null
processing.nullLoadingCfg = loading configuration must not be null
processing.nullBundle = message bundle cannot be null
processing.moreMessages = other messages follow (if any)
refProcessing.uriNotAbsolute = URI "%s" is not absolute
refProcessing.unhandledScheme = URI scheme "%s" not supported (URI: "%s")
refProcessing.uriNotJson = content at URI "%s" is not valid JSON
refProcessing.uriIOError = unable to dereference URI "%s"
refProcessing.refLoop = JSON Reference "%s" loops on itself
refProcessing.danglingRef = JSON Reference "%s" cannot be resolved
schemaWalking.subtreeExpand = attempt to expand to child tree, would lose information
schemaWalking.parentExpand = attempt to expand to parent tree, would lead to recursion
